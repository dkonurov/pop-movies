apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.1"
    reportsDir = file("$buildDir/reports")
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    // what to exclude from coverage report
    // UI, "noise", generated classes, platform classes, etc.
    def excludes = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            '**/*di*/*',
            '**/*models*/*',
            'android/**/*.*',
            '**/*Fragment.*',
            '**/*Activity.*',
            '**/*..Factory*',
            '**/*..Factory',
            '**/*FactoryRegistry*',
            '**/*_Impl*'
    ]
    // generated classes
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: excludes)
    def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: excludes)
    classDirectories = files([debugTree], [kotlinDebugTree])

    // sources
    sourceDirectories = files([
            android.sourceSets.main.java.srcDirs,
            "src/main/kotlin"
    ])
    executionData = files("$buildDir/jacoco/testDebugUnitTest.exec")
}