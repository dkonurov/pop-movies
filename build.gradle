// Top-level build file where you can add configuration options common to all sub-projects/modules.
import io.gitlab.arturbosch.detekt.Detekt
import io.gitlab.arturbosch.detekt.DetektCreateBaselineTask

buildscript {
    apply from: 'dependencies.gradle'
}
//
buildscript {
    dependencies {
        classpath(libs.ktlint.cli) {
            attributes {
                attribute(Bundling.BUNDLING_ATTRIBUTE, getObjects().named(Bundling, Bundling.EXTERNAL))
            }
        }
    }
}

plugins {
    alias libs.plugins.android.application apply false
    alias libs.plugins.android.library apply false
    alias libs.plugins.kotlin.application apply false
    alias libs.plugins.dagger.hilt apply false
    alias libs.plugins.kotlin.compose apply false
    alias libs.plugins.detekt
}

// ktlint
rootProject.tasks.register("ktlintCheck", JavaExec) {
    group = "verification"
    description = "Check Kotlin code style."
    classpath = buildscript.configurations.classpath
    mainClass = "com.pinterest.ktlint.Main"
    args "**/*.kt", "!**.kts", "!**/build/**", "!**/ci-tooling/**"
    jvmArgs = ["-Xmx192m", "-Xms64m"]
}

rootProject.tasks.register("ktlintFormat", JavaExec) {
    group = "formatting"
    description = "Fix Kotlin code style deviations."
    classpath = buildscript.configurations.classpath
    mainClass = "com.pinterest.ktlint.Main"
    jvmArgs "--add-opens=java.base/java.lang=ALL-UNNAMED"
    args "-F", "**/*.kt", "!**.kts", "!**/build/**", "!**/ci-tooling/**"
    jvmArgs = ["-Xmx192m", "-Xms64m"]
}
// Detekt
tasks.withType(Detekt).configureEach {
    it.jvmTarget = "1.8"
}
tasks.withType(DetektCreateBaselineTask).configureEach {
    it.jvmTarget = "1.8"
}

tasks.withType(Detekt).configureEach {
    it.reports {
        html.required.set(true) // observe findings in your browser with structure and code snippets
    }
}

detekt {
    buildUponDefaultConfig = true // preconfigure defaults
    allRules = true
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
